{#-
This template expects a dictionary where the key is an interface id and the value is a dictionary
The value dictionary contains the following keys:
- desc
- new_vlan
- original_inf
-#}

##- Embedded macro to camel case the description -##
{% macro camel_case(text) -%}
    {%- set ns = namespace(word='', result='', first_word=true) -%}
    {%- for char in text -%}
        {%- if char == ' ' or char == '_' or char == '-' -%}
            {%- if ns.word -%}
                {%- if ns.first_word -%}
                    {%- set ns.result = ns.result ~ ns.word | lower -%}
                    {%- set ns.first_word = false -%}
                {%- else -%}
                    {%- set ns.result = ns.result ~ (ns.word | capitalize) -%}
                {%- endif -%}
                {%- set ns.word = '' -%}
            {%- endif -%}
        {%- else -%}
            {%- set ns.word = ns.word ~ char -%}
        {%- endif -%}
    {%- endfor -%}
    {%- if ns.word -%}
        {%- if ns.first_word -%}
            {%- set ns.result = ns.result ~ ns.word | lower -%}
        {%- else -%}
            {%- set ns.result = ns.result ~ (ns.word | capitalize) -%}
        {%- endif -%}
    {%- endif -%}
    {{- ns.result -}}
{%- endmacro %}

##- Import the Jinja2 Macro to Expand the interface text (which is just another .j2 file  in the template directory -##
{% import 'macro_intf_expansion.j2' as interface_macros %}

{% for intf, intf_dict in cfg.items() %}
! Original Interface {{ intf_dict['original_intf'] }}
interface {{ interface_macros.expand_interface(intf) }}
{% if intf_dict['desc'] %}
  description {{ camel_case(intf_dict['desc']) }}
{% endif %}
  switchport access vlan {{ intf_dict['new_vlan'] }}
!
{% endfor %}
